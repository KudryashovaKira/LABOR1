#include <QCoreApplication>
#include <iostream>
#include <stdlib.h>
#include <math.h>
#include <stdio.h>
#include <time.h>
using namespace std;

   void radix(int *A, int *br, int *cr, int sizeC, int sizeAB)
{
    int i,k,n;
    k = sizeC;
    n = sizeAB;
    for (i = 0; i <= k; i++)
        cr[i]=0;
    for (i = 0; i < n; i++)
        cr[A[i]]+=1;
    for (i = 1; i < k+1; i++)
        cr[i]+=cr[i-1];
    for (i = n-1; i >= 0; i--)
      {
         br[cr[A[i]]-1]=A[i];
         cr[A[i]]-=1;
      }
  }
int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);
    const int n=35000000;
        int *A = new int [n];
        int *cr =new int [n];
        for (int i=0;i<n; i++)
            A[i]=1+rand()%1000;
        cout << "first 10 elements:" << endl;
    for (int i=0;i<10;i++)
       cout << A[i] << "  ";
        cout << endl;
    cout << "last 10 elements:" << endl;
    for (int i=34999990;i<35000000;i++)
       cout << A[i] << "  ";
        cout << endl;
        int Max=A[1];
        for(int i=0;i<n;i++)
        {
             if(Max<A[i])
            Max=A[i];
        }
        int *br=new int [Max];
        clock_t start = clock();
        radix(A, br, cr, n, Max);
        clock_t end = clock();
          double seconds = (double)(end - start) / CLOCKS_PER_SEC;
          printf("The time: %f seconds\n", seconds);
        cout << "Sorded radix first 10 elements:" << endl;
        for (int i=0;i<10;i++)
        cout << br[i] << "  ";
        cout << endl;
        cout << "Sorded radix last 10 elements:" << endl;
    for (int i=Max-10;i<Max;i++)
       cout << br[i] << "  ";
        cout << endl;
        system("pause");
    return a.exec();
}
